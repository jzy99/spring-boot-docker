apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: spring-boot-docker-dev-develop
  annotations:
    pipelinesascode.tekton.dev/on-event: '[push]'
    pipelinesascode.tekton.dev/on-target-branch: '[develop]'
    pipelinesascode.tekton.dev/max-keep-runs: '5'
spec:
  params:
    - name: repo_url
      value: '{{ repo_url }}'
    - name: revision
      value: '{{ revision }}'
    - name: namespace
      value: '{{target_namespace}}'
    - name: image_tag
      value: '{{image_tag}}'
    - name: aa
      description: ''
      value: bb
  pipelineSpec:
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
          kind: ClusterTask
        workspaces:
          - name: output
            workspace: workspace
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: maven
        params:
          - name: MAVEN_IMAGE
            value: harbor-k8s.xsyxsc.cn/cloud-builders/mvn
          - name: GOALS
            value:
              - 'dependency:go-offline'
              - '-DskipTests'
              - clean
              - package
          - name: MAVEN_MIRROR_URL
            value: 'https://maven.aliyun.com/nexus/content/groups/public'
          - name: SERVER_USER
            value: ''
          - name: SERVER_PASSWORD
            value: ''
          - name: PROXY_USER
            value: ''
          - name: PROXY_PASSWORD
            value: ''
          - name: PROXY_PORT
            value: ''
          - name: PROXY_HOST
            value: ''
          - name: PROXY_NON_PROXY_HOSTS
            value: ''
          - name: PROXY_PROTOCOL
            value: http
          - name: CONTEXT_DIR
            value: .
        runAfter:
          - fetch-repository
        taskRef:
          kind: ClusterTask
          name: maven
        workspaces:
          - name: source
            workspace: workspace
          - name: maven-settings
            workspace: maven-repo
          - name: maven-local-repo
            workspace: maven-repo
      - name: buildah
        params:
          - name: IMAGE
            value: 'hub-k8s.xsyxsc.cn/cc-dev/spring-boot-docker:$(params.image_tag)'
          - name: TLSVERIFY
            value: 'false'
          - name: STORAGE_DRIVER
            value: vfs
          - name: DOCKERFILE
            value: docker/Dockerfile
        runAfter:
          - maven
        taskRef:
          kind: ClusterTask
          name: buildah
        workspaces:
          - name: source
            workspace: workspace
          - name: dockerconfig
            workspace: dockerconfig-ws
      - name: deploy
        params:
          - name: script
            value: >-
              echo "----------"

              DEPLOYMENT_NAME="spring-boot-docker-develop"

              APP_NAME="spring-boot-docker"

              NAMESPACE="cc-dev"


              if kubectl get deployment $DEPLOYMENT_NAME -n $NAMESPACE
              >/dev/null 2>&1; 

              then
                echo "Deployment $DEPLOYMENT_NAME exists in namespace $NAMESPACE"
                kubectl set image deployment/$DEPLOYMENT_NAME $APP_NAME=hub-k8s.xsyxsc.cn/cc-dev/spring-boot-docker:$(params.image_tag) -n $NAMESPACE
              else
                echo "Deployment $DEPLOYMENT_NAME does not exist in namespace $NAMESPACE"
                kubectl apply -f kubernetes/develop.yaml -n $NAMESPACE
                kubectl set image deployment/$DEPLOYMENT_NAME $APP_NAME=hub-k8s.xsyxsc.cn/cc-dev/spring-boot-docker:$(params.image_tag) -n $NAMESPACE
              fi              

              echo "----------"
        runAfter:
          - buildah
        taskRef:
          kind: ClusterTask
          name: kubernetes-actions
        workspaces:
          - name: kubeconfig-dir
            workspace: workspace
          - name: manifest-dir
            workspace: workspace
        status:
          reason: Skipped
    finally: []
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          storageClassName: cephfs
          volumeMode: Filesystem
          resources:
            requests:
              storage: 1Gi
    - name: maven-repo
      persistentVolumeClaim:
        claimName: maven-repo
    - name: dockerconfig-ws
      secret:
        secretName: registry
    - name: basic-auth
      secret:
        secretName: '{{ git_auth_secret }}'
